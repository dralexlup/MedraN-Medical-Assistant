worker_processes  1;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;
  server_tokens off;
  
  # File upload limits
  client_max_body_size 500M;
  client_body_buffer_size 16k;
  client_body_timeout 300s;
  
  # Proxy timeouts for long-running requests
  proxy_connect_timeout 300s;
  proxy_send_timeout 300s;
  proxy_read_timeout 300s;

  # Upstreams
  upstream webui_upstream { server webui:80; }
  upstream api_upstream   { server api:8080; }
  upstream minio_api      { server minio:9000; }
  upstream minio_console  { server minio:9001; }
  # (Chroma is internal; expose via proxy only if you want)
  upstream chroma_api     { server chroma:8000; }

  server {
    listen 3000;
    server_name _;

    # Health check endpoint
    location = /health {
      return 200 "ok";
      add_header Content-Type text/plain;
    }

    # 1) Web UI at /
    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://webui_upstream/;
    }

    # 2) API at /api -> FastAPI
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_pass http://api_upstream/;
    }

    # 3) Optional: Chroma UI/API (use cautiously)
    location /chroma/ {
      rewrite ^/chroma/?(.*)$ /$1 break;
      proxy_pass http://chroma_api/;
    }

    # 4) MinIO S3 API (path-style)
    location /minio/ {
      # Strip /minio prefix
      rewrite ^/minio/?(.*)$ /$1 break;
      proxy_set_header Host $host;
      proxy_pass http://minio_api/;
    }

    # 5) MinIO Console - requires special configuration
    location /minio-console/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:3000;
      proxy_set_header X-NginX-Proxy true;
      
      # WebSocket support for MinIO Console
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Origin "";
      
      # Pass the full path including /minio-console/
      proxy_pass http://minio_console/;
      proxy_redirect ~^/(.*)$ /minio-console/$1;
    }
  }
}
